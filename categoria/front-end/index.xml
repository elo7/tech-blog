<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Front End on Tech Blog Elo7</title>
    <link>https://blog.elo7.dev/categoria/front-end/</link>
    <description>Recent content in Front End on Tech Blog Elo7</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-BR</language>
    <lastBuildDate>Mon, 18 Jan 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.elo7.dev/categoria/front-end/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Retrospectivas e sua importância</title>
      <link>https://blog.elo7.dev/retrospectivas-e-sua-importancia/</link>
      <pubDate>Mon, 18 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/retrospectivas-e-sua-importancia/</guid>
      <description>Retrospectivas são uma parte essencial das metodologias ágeis, que têm como um de seus pilares a melhoria contínua. O objetivo deste post é mostrar a importância desta prática e como ela funciona, dando alguns exemplos de técnicas e de ferramentas online que nós, do Elo7, temos utilizado para realizar a prática remotamente.
Retrospectivas O objetivo principal de uma retrospectiva é avaliar todo o processo de trabalho ao final de cada sprint.</description>
    </item>
    
    <item>
      <title>Complementando elementos textuais para leitores de tela</title>
      <link>https://blog.elo7.dev/a11y-complementando-elementos-textuais-para-leitores-de-tela/</link>
      <pubDate>Mon, 14 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/a11y-complementando-elementos-textuais-para-leitores-de-tela/</guid>
      <description>Ao digitar o conteúdo de nossas páginas web, muitas vezes utilizamos siglas, abreviações e outros elementos visuais que são triviais para usuários videntes, mas que não conseguem ser interpretadas corretamente por leitores de tela (screen readers). Assim, a acessibildade do site fica prejudicada.
Recentemente, aqui no Elo7, enfrentamos o seguinte problema: como fazer com que nossos cards de produtos sejam lidos da forma esperada por leitores de tela? Por exemplo, tendo um preço com fonte menor e tachada, e outro com fonte maior, é possível entender que o primeiro é o preço original, enquanto o segundo é o promocional.</description>
    </item>
    
    <item>
      <title>Trabalhando com JavaScript Assíncrono</title>
      <link>https://blog.elo7.dev/trabalhando-com-javascript-assincrono/</link>
      <pubDate>Mon, 26 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/trabalhando-com-javascript-assincrono/</guid>
      <description>Não podemos negar que JavaScript é uma linguagem extremamente versátil. Por muito tempo usada apenas em aplicações Front-end, hoje podemos fazer apps full-stack utilizando apenas essa linguagem. Essa versatilidade está fazendo com que cada vez mais desenvolvedores se tornem adeptos a ela.
Nesse post irei focar em um assunto muito importante para aplicações web: requisições assíncronas. Trabalhar com isso pode ser bem chato em várias linguagens, porém mostrarei aqui como o JavaScript fornece ferramentas bastante interessantes para resolver esse problema.</description>
    </item>
    
    <item>
      <title>CSS Scroll Snap</title>
      <link>https://blog.elo7.dev/css-scroll-snap/</link>
      <pubDate>Mon, 12 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/css-scroll-snap/</guid>
      <description>Há algum tempo eu escrevi um post falando sobre o IntersectionObserver e como utilizá-lo para enriquecer um carrossel de fotos. Mas ficou faltando uma funcionalidade muito utilizada em carrosséis: o scroll que ajusta as imagens na tela, mostrando ao usuário sempre a imagem centralizada certinha.
Para conseguir esse efeito existe um módulo em CSS chamado CSS Scroll Snap que facilita e muito a implementação, deixando a transição de imagens bem fluída e bonita.</description>
    </item>
    
    <item>
      <title>Front-End - Coisas de que nós nos orgulhamos em 2018!</title>
      <link>https://blog.elo7.dev/front-end-coisas-que-nos-nos-orgulhamos-em-2018/</link>
      <pubDate>Mon, 08 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/front-end-coisas-que-nos-nos-orgulhamos-em-2018/</guid>
      <description>Antes tarde do que nunca! Já acabamos o primeiro trimestre de 2019, mas ainda dá tempo de falar sobre o que fizemos aqui no Elo7 no time de front end.
Intersection Observer Começamos a usar bastante a API do Intersection Observer, principalmente nos nossos carrosséis de imagens ao longo do site.
A Aline Lee fez um post só sobre ele, mas para resumir, com ele, você consegue observar um determinado elemento, que te avisa sempre que este aparece na área visível da página.</description>
    </item>
    
    <item>
      <title>Builds mais rápidos e portáveis com npm-run-all</title>
      <link>https://blog.elo7.dev/npm-run-all/</link>
      <pubDate>Mon, 25 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/npm-run-all/</guid>
      <description>Quando precisamos baixar dependências, compilar arquivos e gerar assets em nossas aplicações, é comum utilizarmos alguma ferramenta para automatizar esse processo. Uma ferramenta que tem se tornado cada vez mais popular para esse fim são os scripts do npm. Cada um dos scripts pode ser um comando qualquer de terminal, inclusive uma combinação de comandos usando os operadores &amp;amp;&amp;amp;, | (pipe) e ;. Além disso, nos scripts do npm conseguimos chamar comandos de pacotes npm referenciados pelo nosso projeto de forma bem direta.</description>
    </item>
    
    <item>
      <title>Intersection Observer API</title>
      <link>https://blog.elo7.dev/intersection-observer/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/intersection-observer/</guid>
      <description>Nos últimos meses nós conseguimos usufruir bastante da Intersection Observer API que está disponível desde a versão 51 do Chrome.
Implementamos carregamento assíncrono de imagens, paginação infinita, carrosséis entre outras ações na tela dependendo da visibilidade que algum elemento possui.
O que é, o que faz, pra que serve? O Intersection Observer é uma API que atua como uma sentinela te avisando sempre que certo elemento passar a ficar dentro da área visível da página.</description>
    </item>
    
    <item>
      <title>Techtalk - Jogos: indo além do simples CSS</title>
      <link>https://blog.elo7.dev/techtalk-jogos-indo-alem-do-simples-css/</link>
      <pubDate>Mon, 01 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/techtalk-jogos-indo-alem-do-simples-css/</guid>
      <description>Naturalmente, quando pensamos em jogos, pensamos em animações, eventos, vários tipos de interações&amp;hellip; E na hora de desenvolver, mais naturalmente ainda pensamos em uma linguagem de programação, já que ela possibilita executar tudo isso. Mas você já pensou em fazer um jogo usando apenas HTML (uma linguagem de estrutura) e CSS (uma linguagem de estilos)? Sem uma linha de Javascript? Sim, sim, isso é possível! Veja a minha talk e descubra como isso é possível ;D</description>
    </item>
    
    <item>
      <title>Javascript e acessibilidade</title>
      <link>https://blog.elo7.dev/javascript-e-a11y/</link>
      <pubDate>Mon, 10 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/javascript-e-a11y/</guid>
      <description>Se temos uma web rica em termos de experiência do usuário, muito se deve ao Javascript, que nos permite criar componentes dinâmicos e torna a web uma plataforma muito mais interativa. Porém, com grandes poderes, vêm grandes responsabilidades e, se não tomarmos cuidado, dependendo da solução que implementarmos, podemos prejudicar a usabilidade e a acessibilidade das nossas interfaces. Num post anterior, vimos que até o CSS pode atrapalhar em alguns casos, quem dirá o Javascript!</description>
    </item>
    
    <item>
      <title>Conhecendo o Dust.js, uma biblioteca de template para javascript</title>
      <link>https://blog.elo7.dev/conheca-o-dustjs/</link>
      <pubDate>Tue, 31 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/conheca-o-dustjs/</guid>
      <description>O time de front-end do Elo7 está sempre buscando novas tecnologias para compor o fluxo de trabalho, mesmo que algumas dessas tecnologias não estejam nos holofotes da comunidade. Acreditamos que independente do hype, temos como principal foco a resolução de nossas necessidades e é por isso que neste post vamos falar sobre o Dust.js, uma bibloteca javascript para trabalhar com templates, desenvolvido pelo Linkedin e que usamos em nosso serviço de templates.</description>
    </item>
    
    <item>
      <title>Técnicas para codificar um e-mail - parte 4</title>
      <link>https://blog.elo7.dev/tecnicas-para-codificar-um-e-mail-parte-4/</link>
      <pubDate>Tue, 03 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/tecnicas-para-codificar-um-e-mail-parte-4/</guid>
      <description>No terceiro post da série, aprendemos a criar e-mails com conteúdos em colunas e a como deixá-las responsivas. Nesse, iremos comentar sobre algumas dicas gerais e sobre fontes customizadas.
Table x Div Por que ainda usamos a table ao invés de div? A div é bem mais simples e não precisa criar linhas e colunas como a tabela, então por que não usar div&#39;s?
Apesar das div&#39;s serem bem aceitas para a maior parte dos clientes de e-mail, ela ainda não é bem suportada para o Outlook 2007/2010/2013, nos quais algumas propriedades de CSS só funcionam para td.</description>
    </item>
    
    <item>
      <title>Técnicas para codificar um e-mail - parte 3</title>
      <link>https://blog.elo7.dev/tecnicas-para-codificar-um-e-mail-parte-3/</link>
      <pubDate>Mon, 09 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/tecnicas-para-codificar-um-e-mail-parte-3/</guid>
      <description>No segundo post da série, aprendemos a lidar com espaçamento nos e-mails. Neste, iremos abordar como criar conteúdo em colunas e como deixá-las responsivas.
Finalmente chegamos ao conteúdo! Para começar, vamos criar uma nova tabela. É possível usar a mesma tabela do container e alterar o bgcolor para mudar a cor da célula em vez da tabela. Mas aconselho a criar uma nova para evitar problemas com o colspan e rowspan, porque essas propriedades causam problemas para manter a estrutura correta à medida que são criadas novas células.</description>
    </item>
    
    <item>
      <title>Credential Managament API</title>
      <link>https://blog.elo7.dev/credential-management-api/</link>
      <pubDate>Mon, 19 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/credential-management-api/</guid>
      <description>Hoje em dia passamos muito tempo em redes sociais, fóruns, blogs e sites de comércio eletrônico, sabemos então o quanto é chato ter que ficar anotando dados de login e senha deste serviços. E como você sabe, por questões de segurança, não devemos usar os mesmos dados para acessar diferentes serviços. Para resolver este problema, existem diversas aplicações que gerenciam essas informações, como: LastPass, 1Password, bitwarden, Dashlane, entre outros. Os principais navegadores do mercado também possuem recursos para fazer esse gerenciamento.</description>
    </item>
    
    <item>
      <title>CSS Basics - Margin x Padding</title>
      <link>https://blog.elo7.dev/css-basics-margin-padding/</link>
      <pubDate>Mon, 19 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/css-basics-margin-padding/</guid>
      <description>Depois de falar sobre a propriedade display no post anterior, continuaremos falando sobre outras propriedades básicas do CSS. Nesse post conheça um pouco mais sobre as propriedades de espaçamento margin e padding.
Diferença Para começar, qual a principal diferença entre margin e padding? Ao utilizar a propriedade margin, você está acrescentando um espaço externo ao elemento, ou seja, para fora (a distância entre um elemento e outro). Enquanto o padding acrescenta um espaço interno ao elemento, para dentro (a distância entre o conteúdo e a borda).</description>
    </item>
    
    <item>
      <title>Controlando e melhorando a performance do build no Travis CI</title>
      <link>https://blog.elo7.dev/travis-build-stages/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/travis-build-stages/</guid>
      <description>Hoje a maioria dos projetos, tanto de código livre quanto fechado, utilizam git como a ferramenta de controle de versão. E muitos destes estão hospedados no GitHub, uma das plataformas mais comuns para armazenamento de projetos. Além disso, muitos projetos adotam a prática conhecida como integração contínua ou continuous integration, a qual visa facilitar a integração do código sendo desenvolvido e encontrar problemas mais rapidamente. Há inúmeras ferramentas que auxiliam a implementação dessa prática.</description>
    </item>
    
    <item>
      <title>Um pouco sobre acessibilidade, CSS e Javascript</title>
      <link>https://blog.elo7.dev/um-pouco-sobre-css-js-a11y/</link>
      <pubDate>Mon, 05 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/um-pouco-sobre-css-js-a11y/</guid>
      <description>Quando se fala em acessibilidade na Web, normalmente as questões giram em torno de recursos mais avançados de navegação, como pop-ups, formulários com AJAX e menus, que exigem código CSS e Javascript para serem implementados. Isso porque, do lado do HTML, as coisas são um pouco mais simples. Ao escrever um HTML semântico, já ganhamos uma página bastante acessível.
Podemos notar isso com formulários, por exemplo. Ao usar os controles de formulário nativos e a validação HTML5, junto com as tags &amp;lt;label&amp;gt;, &amp;lt;fieldset&amp;gt; e &amp;lt;legend&amp;gt;, nossos formulários já são bastante acessíveis.</description>
    </item>
    
    <item>
      <title>Técnicas para codificar um e-mail - parte 2</title>
      <link>https://blog.elo7.dev/tecnicas-para-codificar-um-e-mail-parte-2/</link>
      <pubDate>Mon, 29 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/tecnicas-para-codificar-um-e-mail-parte-2/</guid>
      <description>No primeiro post da série, aprendemos a criar uma base para codificação de e-mail. Neste, iremos abordar as diversas formas de trabalhar com os espaçamentos.
Para começar, vamos adicionar um cabeçalho ao nosso e-mail. Criaremos uma tabela e, dentro dela, adicionaremos um título para o nosso e-mail. Para ficar igual ao layout proposto no primeiro post da série, vamos adicionar o atributo bgcolor para alterar a cor do fundo para marrom claro:</description>
    </item>
    
    <item>
      <title>Front-End - Coisas de que nós nos orgulhamos em 2017!</title>
      <link>https://blog.elo7.dev/retrospectiva-front-end-2017/</link>
      <pubDate>Mon, 08 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/retrospectiva-front-end-2017/</guid>
      <description>2017 foi um ano recheado de projetos interessantes e desafiantes para nós. Neste post vou fazer um resumão deles.
Web APIs A tendência de tornar a web cada vez mais amigável aos usuários, muitas vezes de forma bem parecida ao que acontece com os aplicativos, se mostrou bem forte. E nós temos diversas ferramentas nos navegadores para implementar isso: as Web APIs.
Foi muito divertido testar e implementar algumas delas:</description>
    </item>
    
    <item>
      <title>Testando acessibilidade</title>
      <link>https://blog.elo7.dev/testando-acessibilidade/</link>
      <pubDate>Mon, 30 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/testando-acessibilidade/</guid>
      <description>Assim como muitos times front-end no mercado afora, nosso time despertou para a questão de acessibilidade recentemente. E, nesse processo, tivemos muitos aprendizados, e descobrimos que, quando se fala de acessibilidade, uma questão essencial é: como testar? Vejamos como foi esse processo aqui.
Acessibilidade: o início Começamos a abordar a questão de acessibilidade por iniciativa de alguns indivíduos do time. A Aline Lee usou o hackday (tempo reservado em cada sprint para o time de engenharia se aperfeiçoar e inovar) para investigar e melhorar a acessibilidade por teclado no cabeçalho do site.</description>
    </item>
    
    <item>
      <title>Técnicas para codificar um e-mail</title>
      <link>https://blog.elo7.dev/tecnicas-para-codificar-um-e-mail/</link>
      <pubDate>Mon, 09 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/tecnicas-para-codificar-um-e-mail/</guid>
      <description>No início da minha carreira como desenvolvedora front-end, tive que codificar o meu primeiro e-mail marketing (aqueles e-mails promocionais que você geralmente recebe de um e-commerce). Como não conhecia muito sobre como funcionavam os clientes de e-mail, fiz o código como se estivesse codificando um site: usei várias propriedade de css, abusei da propriedade float (que na época era moda), usei classes e coloquei todo o css dentro da tag style.</description>
    </item>
    
    <item>
      <title>Customizando campos de formulário com o mask-amd</title>
      <link>https://blog.elo7.dev/customizando-campos-de-formulario-com-elo7-mask-amd/</link>
      <pubDate>Mon, 25 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/customizando-campos-de-formulario-com-elo7-mask-amd/</guid>
      <description>Sempre procuramos uma biblioteca que seja bem focada no problema que queremos resolver e frequentemente encontramos aqueles pacotes com várias funcionalidades. Normalmente, utilizamos apenas um recurso (ou alguns) da biblioteca que escolhemos utilizar.
É importante mencionar o peso inútil no final do carregamento da página, agora imagine quando você utiliza várias bibliotecas em seu site.
Esse tipo de situação é muito comum e, pensando nesse problema, nós do Elo7 resolvemos escrever nossas próprias bibliotecas, diretas no que necessitamos na casa, e isso vem sendo bem bacana pois, além de otimizar nossas aplicações, ainda as disponibilizamos para comunidade.</description>
    </item>
    
    <item>
      <title>Web Share API</title>
      <link>https://blog.elo7.dev/web-share-api/</link>
      <pubDate>Mon, 11 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/web-share-api/</guid>
      <description>Vivemos atualmente a era da informação, onde estamos conectados o tempo todo a redes sociais (Facebook, Twitter, LinkedIn), programas de conversação (WhatsApp, Telegram e Slack) e outras ferramentas que permitem o compartilhamento de informações. Através destes softwares, podemos compartilhar com nossos amigos de tudo: fotos, textos, um link para uma notícia importante ou até mesmo aquele produto que gostamos. Como desenvolvedor web, você provavelmente já precisou adicionar em seus projetos algum recurso para compartilhamento de terceiros.</description>
    </item>
    
    <item>
      <title>Jest - Testar seu código Javascript nunca foi tão fácil!</title>
      <link>https://blog.elo7.dev/jest-testar-seu-codigo-javascript-nunca-foi-tao-facil/</link>
      <pubDate>Mon, 28 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/jest-testar-seu-codigo-javascript-nunca-foi-tao-facil/</guid>
      <description>Trabalhar com desenvolvimento de software é algo que está longe de ser fácil, pois além da parte técnica (que evolui a passadas largas), todo profissional precisa estar minimamente antenado a ponto de perceber qual das suas posturas em relação à execução de suas atividades podem literalmente travá-lo (dentro da carreira) ou levá-lo a outro patamar. Dentre as muitas características valorizadas atualmente pelo mercado, uma importantissíma é ser um profissional adaptável a mudanças, pelo simples fato que o mundo muda muito rapidamente, e o jeito que trabalhavámos no passado já não serve e/ou se encaixa com o presente.</description>
    </item>
    
    <item>
      <title>Frameworks e bibliotecas JavaScript: quando e qual usar</title>
      <link>https://blog.elo7.dev/frameworks-js/</link>
      <pubDate>Mon, 07 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/frameworks-js/</guid>
      <description>Recentemente, temos ouvido cada vez mais sobre frameworks e bibliotecas JavaScript, tanto os que já existem há algum tempo como os que acabaram de surgir: jQuery, Zepto, Ember, Backbone, AngularJS, React, Vue.js&amp;hellip; mas será que precisamos usar algum deles? Se sim, qual devemos escolher para nossa aplicação? Neste post, vou apresentar porque no Elo7 decidimos por não adotar nenhum desses frameworks ou bibliotecas, e quais foram as consequências dessa decisão.</description>
    </item>
    
    <item>
      <title>CSS Basics - Display</title>
      <link>https://blog.elo7.dev/css-basics-display/</link>
      <pubDate>Mon, 24 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/css-basics-display/</guid>
      <description>Este será o primeiro de uma série de posts sobre CSS Básico. A ideia desses posts é explicar como funciona cada uma das propriedades do CSS que na teoria &amp;ldquo;todo mundo conhece&amp;rdquo;. Vamos entender como usar cada uma delas sem ficarmos apenas &amp;ldquo;chutando&amp;rdquo; até descobrir o que funciona e nunca mais mexer. Nesse primeiro post falaremos sobre a propriedade display.
A propriedade display é muito importante para o controle do layout, pois indica a caixa de renderização para cada elemento.</description>
    </item>
    
    <item>
      <title>Javascript Isomórfico - parte 2</title>
      <link>https://blog.elo7.dev/isomorfismo-parte-2/</link>
      <pubDate>Mon, 10 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/isomorfismo-parte-2/</guid>
      <description>Continuando o post sobre Javascript isomórfico, depois de explicar toda a história e o conceito de isomorfismo, vamos entrar em uma parte mais prática. Quais empresas usam, o resultado da implementação e alguns frameworks existentes no mercado serão alguns dos tópicos deste post.
Quem usa? Algumas empresas como Airbnb, Facebook, PayPal, Walmart, Netflix, Autodesk, além do próprio Elo7.
Como tudo começou? Em 2011, Charlie Robbins, da Nodejitsu, escreveu um post apresentando a arquitetura isomórfica.</description>
    </item>
    
    <item>
      <title>Google I/O - Web</title>
      <link>https://blog.elo7.dev/google-io-3/</link>
      <pubDate>Mon, 26 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/google-io-3/</guid>
      <description>Durante várias sessões, os palestrantes incentivaram fortemente o uso de AMP (Accelerated Mobile Pages) e PWA (Progressive Web Apps), além de reforçarem que Mobile Web é mainstream.
Um Product Manager do Twitter apresentou casos de sucesso com PWA, onde seu uso trouxe um incremento de 65% de pages/sessions, e 75% mais tweets.
Forbes, Expedia, Pinterest, Lyft, Airbnb, Trivago, Lacôme, entre outros já utilizam PWAs. Na Lacôme, houve um incremento de 53% de tempo de sessão após a adoção da tecnologia.</description>
    </item>
    
    <item>
      <title>As &#34;states&#34; e &#34;properties&#34; do atributo role no WAI-ARIA</title>
      <link>https://blog.elo7.dev/wai-aria-states-properties/</link>
      <pubDate>Mon, 12 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/wai-aria-states-properties/</guid>
      <description>Neste terceiro post da série sobre WAI-ARIA, trataremos sobre os estados (states) e propriedades (properties) das roles. Caso queira saber mais, fizemos um apanhado geral introdutório sobre o WAI-ARIA e sobre o seu papel no html.
Os termos states e properties referem-se a características semelhantes. Ambos fornecem informações específicas sobre um objeto, e ambos fazem parte da definição da natureza das roles. São aplicados como atributos de marcação de arias prefixados.</description>
    </item>
    
    <item>
      <title>Posicionando elementos com CSS</title>
      <link>https://blog.elo7.dev/posicionando-com-css/</link>
      <pubDate>Mon, 15 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/posicionando-com-css/</guid>
      <description>Posicionar elementos na tela em layout responsivo pode ser uma das partes mais chatas na construção de um site. Muitas vezes decidir qual método utilizar, considerando suas vantagens e desvantagens, é a chave para uma economia valiosa de tempo no desenvolvimento.
Vamos considerar que queremos exibir uma simples galeria de imagens a qual deve exibir cinco imagens posicionadas em uma linha, não permitindo que as imagens fiquem esticadas. Caso a tela seja pequena demais elas devem diminuir de tamanho proporcionalmente.</description>
    </item>
    
    <item>
      <title>Os papéis do WAI-ARIA no HTML</title>
      <link>https://blog.elo7.dev/wai-aria-roles/</link>
      <pubDate>Mon, 17 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/wai-aria-roles/</guid>
      <description>O ARIA se divide semanticamente em três partes: seus papéis (roles), estados (states) e suas propriedades (properties). As roles (papéis) descrevem widgets que não estão disponíveis no HTML 4, como sliders, barras de menus, guias e diálogos. As properties (propriedades) descrevem características desses widgets, como se eles são arrastáveis, têm um elemento necessário ou têm um popup associado a eles. Os states (estados) descrevem o estado de interação atual de um elemento, informando a tecnologia de assistência se ela estiver ocupada, desativada, selecionada ou ocultada.</description>
    </item>
    
    <item>
      <title>Um apanhado geral sobre o WAI-ARIA</title>
      <link>https://blog.elo7.dev/wai-aria-apanhado-geral/</link>
      <pubDate>Mon, 03 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/wai-aria-apanhado-geral/</guid>
      <description>Com a evolução da web, os sites estão ficando cada vez mais dinâmicos, utilizando muitos recursos de AJAX, JavaScript e CSS. Essas mudanças melhoram muito a usabilidade na web, porém usuários de tecnologias assistivas correm risco de serem excluídos por conta das lacunas de acessibilidade. Como leitores de tela normalmente sofrem com JavaScript, surge uma nova maneira de criar interfaces dinâmicas que são acessíveis a mais usuários.
A maioria dos frameworks de JavaScript oferece ferramentas do lado do cliente que simulam o comportamento de interfaces desktop e mobile para se tornarem mais familiares, como drag and drop, menu hamburguer deslizante&amp;hellip; Todos eles são criados nessa combinação de JavaScript, CSS e HTML.</description>
    </item>
    
    <item>
      <title>Javascript Isomórfico</title>
      <link>https://blog.elo7.dev/isomorfismo/</link>
      <pubDate>Mon, 30 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/isomorfismo/</guid>
      <description>Novos frameworks são criados a todo momento e um novo nome está criando mais força no mundo Javascript: isomorfismo. Farei uma série de posts para explicar melhor esse conceito e algumas aplicações dele com o uso de frameworks. Nesse primeiro post, será abordada uma parte mais teórica sobre o que é isomorfismo.
Voltando no tempo Antes de falar de fato do isomorfismo, é interessante pensar em o que aconteceu na história para surgir a necessidade de utilizar um código Javascript isomórfico.</description>
    </item>
    
    <item>
      <title>A importância da semântica no HTML - parte II</title>
      <link>https://blog.elo7.dev/html-semantico-2/</link>
      <pubDate>Mon, 16 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/html-semantico-2/</guid>
      <description>Neste segundo post da série sobre a importância da semântica para os usuários e desenvolvedores, trataremos sobre como podemos melhorar nosso conteúdo de forma que os buscadores entendam o que realmente estamos oferecendo, com a menor possibilidade de ruídos de informação possível. Saberemos de maneira prática como podemos melhorar a disponibilidade de nosso conteúdo.
Caso não tenha lido o nosso primeiro post, basta acessar aqui.
Dando significado ao HTML Lembram do uso da palavra “lembrança” que utilizamos no post anterior?</description>
    </item>
    
    <item>
      <title>A tecnologia por trás de progressive web apps</title>
      <link>https://blog.elo7.dev/a-tecnologia-por-tras-de-progressive-web-apps/</link>
      <pubDate>Mon, 10 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/a-tecnologia-por-tras-de-progressive-web-apps/</guid>
      <description>Se você trabalha com web, provavelmente já deve ter ouvido falar no termo progressive web app. Essa é uma tendência que vem aparecendo muito forte, impulsionada principalmente pelo Google, que até já organizou um evento especificamente sobre esse tema.
O Fabricio Teixeira já escreveu um post explicando bem o conceito de progressive web apps. O objetivo aqui, então, vai ser explorar um pouco mais o lado técnico dessa tendência: como a tecnologia evoluiu para chegarmos nesse ponto, o que temos de ferramentas e o que ainda está por vir.</description>
    </item>
    
    <item>
      <title>A importância da semântica no HTML - parte I</title>
      <link>https://blog.elo7.dev/html-semantico-1/</link>
      <pubDate>Mon, 26 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/html-semantico-1/</guid>
      <description>Antigamente a informação era armazenada em papéis, rochas e até paredes. A única forma de encontrar o que queríamos era indo até o local no qual a mensagem estava armazenada. Hoje existe todo um mundo digital que gera terabytes de dados por segundo.
E para onde vai toda essa informação? Será que ficou mais fácil encontrar o que se deseja? O problema atual não é a escassez, mas a porção de ruído proveniente de uma quantidade exorbitante de dados.</description>
    </item>
    
    <item>
      <title>ECMAScript 2015 no Elo7 – Proxy</title>
      <link>https://blog.elo7.dev/ecmascript-post/</link>
      <pubDate>Thu, 11 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/ecmascript-post/</guid>
      <description>Já faz algum tempo que ouvimos falar de ECMAScript 2015 (também conhecido como ECMAScript 6) com todas as suas novidades como map reduce, escopos, promises, etc. Mas infelizmente não podemos utilizá-las porque temos problema de compatibilidade entre os navegadores, ora por versão, ora por falta da implementação da especificação. Assim como todas as especificações (ECMA, CSS, HTML), as adoções são feitas aos poucos pelos navegadores. Com o tempo a aceitação se torna maior, até que um belo dia a especificação se torna recomendada e viável.</description>
    </item>
    
    <item>
      <title>CSS4 - Seletores nível 4</title>
      <link>https://blog.elo7.dev/css4-selectors/</link>
      <pubDate>Mon, 16 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/css4-selectors/</guid>
      <description>O CSS3 já está aí com força total, mas poucos sabem que o CSS4 já está em rascunho desde 2011 e muitas funções hoje são usadas sem você saber. Um dos focos dessa versão são os novos seletores. Neste post irei falar um pouco sobre o que vem por aí, este tema foi uma apresentação realizada em um TechTalk do Elo7 e os slides estão no final do post.</description>
    </item>
    
    <item>
      <title>O universo soturno da compatibilidade cross-browser</title>
      <link>https://blog.elo7.dev/compatibilidade-cross-browser/</link>
      <pubDate>Mon, 28 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/compatibilidade-cross-browser/</guid>
      <description>Em um mundo ideal, todos os browsers apresentariam o mesmo comportamento no carregamento e renderização das páginas da web. Para o terror de muitos desenvolvedores, existem determinadas situações em que uma implementação funciona perfeitamente no navegador utilizado na hora de testar o código, contudo ao abrir a mesma página com o mesmo código em outro, o site está quebrado.
Ao afirmar que um site é cross-browser, o desenvolvedor está se comprometendo a dar suporte às funcionalidades em todos os navegadores.</description>
    </item>
    
    <item>
      <title>Gerenciamento de dependências front-end com bower</title>
      <link>https://blog.elo7.dev/gerenciamento-dependencias-bower/</link>
      <pubDate>Thu, 05 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/gerenciamento-dependencias-bower/</guid>
      <description>Durante o desenvolvimento de um projeto, nos deparamos com diversos problemas que não são exclusivos do mesmo. Muitos destes problemas, como persistência de dados, troca de mensagens assíncronas, transação e segurança, já possuem soluções que foram compiladas em bibliotecas para facilitar o nosso dia-a-dia ao resolver diversos problemas, tanto no back-end quando no front-end.
Só que essas bibliotecas também podem depender de outras bibliotecas. Então, ao importar uma delas para o nosso projeto, precisamos também importar as suas dependências e as bibliotecas as quais elas necessitam.</description>
    </item>
    
    <item>
      <title>Tech Talks Elo7</title>
      <link>https://blog.elo7.dev/tech-talks/</link>
      <pubDate>Thu, 04 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog.elo7.dev/tech-talks/</guid>
      <description>No Elo7 temos uma série de iniciativas legais que realizamos em nosso dia-a-dia: Tech Talks, Dojos, Grupos de estudos, café da manhã com vendedores, craft day, além de aplicar as metodologias ágil no nosso dia a dia.
Neste nosso primeiro post gostaria de falar um pouco sobre os Tech Talks. Semanalmente um integrante de um time faz uma apresentação sobre um determinado tema durante uma hora, relacionado a uma tecnologia que utilizamos no nosso dia-a-dia ou que podemos aplicar algum dia.</description>
    </item>
    
  </channel>
</rss>